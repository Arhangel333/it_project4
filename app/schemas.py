from pydantic import BaseModel, ConfigDict
from datetime import datetime
from typing import Optional

# üéØ –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ (–æ–±—â–∏–µ –ø–æ–ª—è –¥–ª—è –≤—Å–µ—Ö)
class TaskBase(BaseModel):
    title: str
    description: Optional[str] = None
    completed: bool = False

# üÜï –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
class TaskCreate(TaskBase):
    pass

# üîÑ –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
class TaskUpdate(BaseModel):
    title: Optional[str] = None
    description: Optional[str] = None
    completed: Optional[bool] = None

# üìä –î–ª—è —á—Ç–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
class Task(TaskBase):
    id: int
    created_at: datetime
    updated_at: Optional[datetime] = None

    model_config = ConfigDict(from_attributes=True)  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û!